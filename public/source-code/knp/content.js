// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –Ω–∞—Ö–æ–¥–∏–º—Å—è –ª–∏ –º—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ñ–∏–ª—å–º–∞ –∏–ª–∏ —Å–µ—Ä–∏–∞–ª–∞
const isMovieOrSeriesPage = () => {
  const url = window.location.href;
  const pathname = window.location.pathname;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º URL –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω–∞–º —Å—Ç—Ä–∞–Ω–∏—Ü —Ñ–∏–ª—å–º–æ–≤ –∏ —Å–µ—Ä–∏–∞–ª–æ–≤
  const isFilmPage = /^\/film\/\d+/.test(pathname);
  const isSeriesPage = /^\/series\/\d+/.test(pathname);
  
  return isFilmPage || isSeriesPage;
};

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
let extensionState = {
  buttonsAdded: false,
  searchAttempts: 0,
  maxSearchAttempts: 8,
  searchInterval: null,
  observer: null
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–∞ –∫–Ω–æ–ø–∫–∏
const getButtonType = (button) => {
  const text = button.textContent?.toLowerCase().trim();
  const title = button.getAttribute('title')?.toLowerCase().trim();
  
  if ((text && text.includes('–±—É–¥—É —Å–º–æ—Ç—Ä–µ—Ç—å')) || (title && title.includes('–±—É–¥—É —Å–º–æ—Ç—Ä–µ—Ç—å'))) {
    return 'will-watch';
  }
  if ((text && (text.includes('—Å–º–æ—Ç—Ä–µ—Ç—å —Å–µ—Ä–∏–∞–ª') || text.includes('—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–∏–ª—å–º') || text.includes('—Å–º–æ—Ç—Ä–µ—Ç—å'))) ||
      (title && title.includes('—Å–º–æ—Ç—Ä–µ—Ç—å'))) {
    return 'watch';
  }
  
  return null;
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∫–Ω–æ–ø–∫–∏
const createFreeButton = (originalButton, buttonType) => {
  const newButton = originalButton.cloneNode(true);
  
  // –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π –∫–Ω–æ–ø–∫–∏
  const originalRect = originalButton.getBoundingClientRect();
  const originalStyles = window.getComputedStyle(originalButton);
  
  // –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–∞–µ–º –≤–µ—Å—å —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
  const allTextElements = newButton.querySelectorAll('*');
  allTextElements.forEach(element => {
    // –£–¥–∞–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∏–∑ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    if (element.childNodes.length > 0) {
      element.childNodes.forEach(node => {
        if (node.nodeType === Node.TEXT_NODE) {
          node.textContent = '';
        }
      });
    }
  });
  
  // –û—á–∏—â–∞–µ–º –ø—Ä—è–º–æ–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –∫–Ω–æ–ø–∫–∏
  newButton.childNodes.forEach(node => {
    if (node.nodeType === Node.TEXT_NODE) {
      node.textContent = '';
    }
  });
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –Ω–æ–≤–æ–π –∫–Ω–æ–ø–∫–∏
  const buttonText =  '–°–º–æ—Ç—Ä–µ—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ';
  
  // –ù–∞—Ö–æ–¥–∏–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏ –∑–∞–º–µ–Ω—è–µ–º –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
  let textContainer = newButton.querySelector('span[class*="defaultText"], span[data-tid], .styles_defaultText__PgVb9');
  
  if (!textContainer) {
    // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä, –∏—â–µ–º –ª—é–±–æ–π span –∏–ª–∏ div —Å —Ç–µ–∫—Å—Ç–æ–º
    const spans = newButton.querySelectorAll('span, div');
    for (const span of spans) {
      if (span.textContent.trim() || span.innerHTML.trim()) {
        textContainer = span;
        break;
      }
    }
  }
  
  if (textContainer) {
    // –ü–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–º–µ–Ω—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    textContainer.innerHTML = '';
    textContainer.textContent = buttonText;
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Å—Ç–∞–±–∏–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏ –∫ —Ç–µ–∫—Å—Ç–æ–≤–æ–º—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É
    textContainer.style.cssText = `
      color: white !important;
      font-weight: 600 !important;
      font-size: 14px !important;
      line-height: 1 !important;
      text-align: center !important;
      display: inline !important;
      vertical-align: baseline !important;
      position: static !important;
      transform: none !important;
      width: auto !important;
      height: auto !important;
      min-width: auto !important;
      min-height: auto !important;
      max-width: none !important;
      max-height: none !important;
      flex: none !important;
      margin: 0 !important;
      padding: 0 !important;
    `;
  } else {
    // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π
    newButton.innerHTML = `<span style="color: white !important; font-weight: 600 !important; font-size: 14px !important; line-height: 1 !important; text-align: center !important; display: inline !important; vertical-align: baseline !important; position: static !important; transform: none !important; width: auto !important; height: auto !important; min-width: auto !important; min-height: auto !important; max-width: none !important; max-height: none !important; flex: none !important; margin: 0 !important; padding: 0 !important;">${buttonText}</span>`;
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–ª–∏—á–∏—Ç–µ–ª—å–Ω—ã–µ –∫–ª–∞—Å—Å—ã
  newButton.classList.add('knp-ext-free-button');
  if (buttonType === 'will-watch') {
    newButton.classList.add('knp-ext-free-will-watch-button');
  } else {
    newButton.classList.add('knp-ext-free-watch-button');
  }
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π –∫–Ω–æ–ø–∫–∏, –Ω–æ –∫–æ–º–ø–∞–∫—Ç–Ω–µ–µ
  const targetHeight = Math.max(Math.min(originalRect.height, 50), 44);
  const targetWidth = Math.max(Math.min(originalRect.width * 0.9, 200), 160);
  
  // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã –∏ —Å—Ç–∏–ª–∏ –¥–ª—è –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è
  newButton.style.cssText += `
    min-height: ${targetHeight}px !important;
    max-height: ${targetHeight}px !important;
    height: ${targetHeight}px !important;
    min-width: ${targetWidth}px !important;
    width: auto !important;
    padding: 12px 24px !important;
    font-size: 14px !important;
    box-sizing: border-box !important;
    display: inline-flex !important;
    align-items: center !important;
    justify-content: center !important;
    vertical-align: top !important;
    margin-top: 0 !important;
    margin-bottom: 0 !important;
    flex-shrink: 0 !important;
  `;
  
  // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π href –µ—Å–ª–∏ –µ—Å—Ç—å
  if (newButton.href) {
    newButton.removeAttribute('href');
  }
  
  // –£–±–∏—Ä–∞–µ–º –≤—Å–µ data-–∞—Ç—Ä–∏–±—É—Ç—ã —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
  const dataAttributes = [...newButton.attributes].filter(attr => attr.name.startsWith('data-'));
  dataAttributes.forEach(attr => newButton.removeAttribute(attr.name));
  
  // –û–±–Ω–æ–≤–ª—è–µ–º title
  newButton.setAttribute('title', buttonText);
  
  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
  newButton.addEventListener('click', (e) => {
    e.preventDefault();
    e.stopPropagation();
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π URL
    const currentUrl = window.location.href;
    
    // –ó–∞–º–µ–Ω—è–µ–º kinopoisk –Ω–∞ sspoisk –≤ –¥–æ–º–µ–Ω–Ω–æ–º –∏–º–µ–Ω–∏
    const newUrl = currentUrl.replace(/kinopoisk/g, 'sspoisk');
    
    console.log(`–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å ${currentUrl} –Ω–∞ ${newUrl}`);
    
    // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –Ω–æ–≤—ã–π URL
    window.location.href = newUrl;
  });
  
  return newButton;
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –∫–Ω–æ–ø–æ–∫ "–°–º–æ—Ç—Ä–µ—Ç—å" –∏ "–ë—É–¥—É —Å–º–æ—Ç—Ä–µ—Ç—å"
const findButtons = () => {
  const foundButtons = [];
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏ –ª–∏ –º—ã —É–∂–µ –∫–Ω–æ–ø–∫–∏
  if (document.querySelector('.knp-ext-free-button')) {
    console.log('–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã');
    return [];
  }

  // –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è Kinopoisk (–≤ –ø–æ—Ä—è–¥–∫–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞)
  const kinopoiskSelectors = [
    // –í—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç - –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    '[data-test-id="Watch"]',
    '[data-testid="Watch"]',
    
    // –ü–æ –∫–ª–∞—Å—Å–∞–º –∏–∑ HTML
    '.kinopoisk-watch-online-button',
    '[class*="kinopoisk-watch-online-button"]',
    
    // –ü–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ watchOnlineBlock
    '[class*="watchOnlineBlock"] button',
    '[class*="watchOnlineBlock"] a',
    
    // –ü–æ –∫–ª–∞—Å—Å–∞–º –∫–Ω–æ–ø–æ–∫
    '[class*="styles_watchOnlineButton"]',
    '[class*="styles_button"][class*="Q82i0"]',
    '[class*="style_button"][class*="PNtXT"]',
    
    // –ü–æ data-tid –∫–Ω–æ–ø–∫–∏
    '[data-tid*="watch"]',
    
    // –û–±—â–∏–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è –∫–Ω–æ–ø–æ–∫ "–°–º–æ—Ç—Ä–µ—Ç—å"
    'a[href*="hd.kinopoisk.ru"]',
    'a[href*="watch"]',
    
    // –ü–æ title –∞—Ç—Ä–∏–±—É—Ç—É
    'button[title*="—Å–º–æ—Ç—Ä–µ—Ç—å"]',
    'button[title*="–°–º–æ—Ç—Ä–µ—Ç—å"]',
    'button[title*="–ë—É–¥—É —Å–º–æ—Ç—Ä–µ—Ç—å"]'
  ];

  console.log('üîç –ü–æ–∏—Å–∫ –∫–Ω–æ–ø–æ–∫ –ø–æ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–º —Å–µ–ª–µ–∫—Ç–æ—Ä–∞–º...');

  let watchButton = null;
  let willWatchButton = null;

  // –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º –∫–Ω–æ–ø–∫—É "–°–º–æ—Ç—Ä–µ—Ç—å" (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è)
  for (const selector of kinopoiskSelectors) {
    if (watchButton) break; // –ï—Å–ª–∏ –Ω–∞—à–ª–∏ –∫–Ω–æ–ø–∫—É "–°–º–æ—Ç—Ä–µ—Ç—å", –ø—Ä–µ–∫—Ä–∞—â–∞–µ–º –ø–æ–∏—Å–∫
    
    try {
      const elements = document.querySelectorAll(selector);
      
      for (const element of elements) {
        const buttonType = getButtonType(element);
        
        if (buttonType === 'watch') {
          const text = element.textContent?.toLowerCase().trim() || element.getAttribute('title') || '';
          console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ "–°–º–æ—Ç—Ä–µ—Ç—å": "${text}" –ø–æ —Å–µ–ª–µ–∫—Ç–æ—Ä—É: ${selector}`);
          watchButton = element;
          break;
        }
      }
    } catch (e) {
      console.warn(`–û—à–∏–±–∫–∞ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞ ${selector}:`, e);
    }
  }

  // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –∫–Ω–æ–ø–∫—É "–°–º–æ—Ç—Ä–µ—Ç—å", –∏—â–µ–º "–ë—É–¥—É —Å–º–æ—Ç—Ä–µ—Ç—å"
  if (!watchButton) {
    console.log('üîç –ö–Ω–æ–ø–∫–∞ "–°–º–æ—Ç—Ä–µ—Ç—å" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –∏—â–µ–º "–ë—É–¥—É —Å–º–æ—Ç—Ä–µ—Ç—å"...');
    
    for (const selector of kinopoiskSelectors) {
      if (willWatchButton) break;
      
      try {
        const elements = document.querySelectorAll(selector);
        
        for (const element of elements) {
          const buttonType = getButtonType(element);
          
          if (buttonType === 'will-watch') {
            const text = element.textContent?.toLowerCase().trim() || element.getAttribute('title') || '';
            console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ "–ë—É–¥—É —Å–º–æ—Ç—Ä–µ—Ç—å": "${text}" –ø–æ —Å–µ–ª–µ–∫—Ç–æ—Ä—É: ${selector}`);
            willWatchButton = element;
            break;
          }
        }
      } catch (e) {
        console.warn(`–û—à–∏–±–∫–∞ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞ ${selector}:`, e);
      }
    }
  }

  // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –Ω–∏ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–∏ –ø–æ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞–º, –∏—â–µ–º –ø–æ —Ç–µ–∫—Å—Ç—É
  if (!watchButton && !willWatchButton) {
    console.log('üîç –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ –ø–æ —Ç–µ–∫—Å—Ç—É...');
    
    const allClickableElements = document.querySelectorAll('button, a, [role="button"], [class*="button"]');
    
    // –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º "–°–º–æ—Ç—Ä–µ—Ç—å"
    for (const element of allClickableElements) {
      if (watchButton) break;
      
      const buttonType = getButtonType(element);
      
      if (buttonType === 'watch') {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç–ª–µ–º–µ–Ω—Ç –≤–∏–¥–∏–º
        const rect = element.getBoundingClientRect();
        const isVisible = rect.width > 0 && rect.height > 0;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–Ω–æ–ø–∫–∞ –Ω–µ –≤ –±–ª–æ–∫–µ —Ä–µ–∫–ª–∞–º—ã –∏–ª–∏ –ø–æ—Ö–æ–∂–∏—Ö —Ñ–∏–ª—å–º–æ–≤
        const isInMainContent = !element.closest('[class*="similar"]') && 
                               !element.closest('[class*="recommend"]') &&
                               !element.closest('[class*="ads"]') &&
                               !element.closest('[class*="banner"]');
        
        if (isVisible && isInMainContent) {
          const text = element.textContent?.toLowerCase().trim() || element.getAttribute('title') || '';
          console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ "–°–º–æ—Ç—Ä–µ—Ç—å" –ø–æ —Ç–µ–∫—Å—Ç—É: "${text}"`);
          watchButton = element;
        }
      }
    }
    
    // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ "–°–º–æ—Ç—Ä–µ—Ç—å", –∏—â–µ–º "–ë—É–¥—É —Å–º–æ—Ç—Ä–µ—Ç—å"
    if (!watchButton) {
      for (const element of allClickableElements) {
        if (willWatchButton) break;
        
        const buttonType = getButtonType(element);
        
        if (buttonType === 'will-watch') {
          const rect = element.getBoundingClientRect();
          const isVisible = rect.width > 0 && rect.height > 0;
          
          const isInMainContent = !element.closest('[class*="similar"]') && 
                                 !element.closest('[class*="recommend"]') &&
                                 !element.closest('[class*="ads"]') &&
                                 !element.closest('[class*="banner"]');
          
          if (isVisible && isInMainContent) {
            const text = element.textContent?.toLowerCase().trim() || element.getAttribute('title') || '';
            console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ "–ë—É–¥—É —Å–º–æ—Ç—Ä–µ—Ç—å" –ø–æ —Ç–µ–∫—Å—Ç—É: "${text}"`);
            willWatchButton = element;
          }
        }
      }
    }
  }

  // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–π–¥–µ–Ω–Ω—É—é –∫–Ω–æ–ø–∫—É (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç —É "–°–º–æ—Ç—Ä–µ—Ç—å")
  if (watchButton) {
    foundButtons.push({ button: watchButton, type: 'watch' });
    console.log('üéØ –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–Ω–æ–ø–∫—É "–°–º–æ—Ç—Ä–µ—Ç—å" (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è)');
  } else if (willWatchButton) {
    foundButtons.push({ button: willWatchButton, type: 'will-watch' });
    console.log('üéØ –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–Ω–æ–ø–∫—É "–ë—É–¥—É —Å–º–æ—Ç—Ä–µ—Ç—å" (–∫–Ω–æ–ø–∫–∞ "–°–º–æ—Ç—Ä–µ—Ç—å" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞)');
  }

  console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: ${foundButtons.length}`);
  
  return foundButtons;
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫
const addFreeButtons = () => {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏–º—Å—è –ª–∏ –º—ã –Ω–∞ –Ω—É–∂–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
  if (!isMovieOrSeriesPage()) {
    console.log('Kinopoisk Extension: –ù–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ñ–∏–ª—å–º–∞/—Å–µ—Ä–∏–∞–ª–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º');
    return;
  }

  // –ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∏ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã, –Ω–µ –∏—â–µ–º –ø–æ–≤—Ç–æ—Ä–Ω–æ
  if (extensionState.buttonsAdded) {
    return;
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç –ø–æ–ø—ã—Ç–æ–∫
  extensionState.searchAttempts++;
  if (extensionState.searchAttempts > extensionState.maxSearchAttempts) {
    console.log(`‚ùå –î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –ø–æ–ø—ã—Ç–æ–∫ –ø–æ–∏—Å–∫–∞ –∫–Ω–æ–ø–æ–∫ (${extensionState.maxSearchAttempts}), –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ–∏—Å–∫–∞`);
    clearSearchInterval();
    return;
  }

  console.log(`üîç –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–∏—Å–∫–∞ –∫–Ω–æ–ø–æ–∫: ${extensionState.searchAttempts}/${extensionState.maxSearchAttempts}`);

  // –ù–∞—Ö–æ–¥–∏–º –∫–Ω–æ–ø–∫–∏
  const buttons = findButtons();
  
  if (buttons.length === 0) {
    console.log('–ö–Ω–æ–ø–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
    return;
  }

  buttons.forEach(({ button, type }) => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏ –ª–∏ –º—ã —É–∂–µ –∫–Ω–æ–ø–∫—É —Ä—è–¥–æ–º —Å —ç—Ç–æ–π
    if (button.nextElementSibling?.classList.contains('knp-ext-free-button')) {
      console.log(`–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞ —Ä—è–¥–æ–º —Å –∫–Ω–æ–ø–∫–æ–π —Ç–∏–ø–∞: ${type}`);
      extensionState.buttonsAdded = true;
      clearSearchInterval();
      return;
    }

    try {
      const newButton = createFreeButton(button, type);
      
      // –ù–∞—Ö–æ–¥–∏–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏ –ø—Ä–∏–º–µ–Ω—è–µ–º –∫ –Ω–µ–º—É flex —Å—Ç–∏–ª–∏
      const parentContainer = button.parentNode;
      if (parentContainer) {
        // –ü—Ä–∏–º–µ–Ω—è–µ–º flex —Å—Ç–∏–ª–∏ –∫ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–º—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É
        parentContainer.style.cssText += `
          display: flex !important;
          align-items: center !important;
          gap: 12px !important;
          flex-wrap: wrap !important;
        `;
        
        // –¢–∞–∫–∂–µ –ø—Ä–∏–º–µ–Ω—è–µ–º —Å—Ç–∏–ª–∏ –∫ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π –∫–Ω–æ–ø–∫–µ –¥–ª—è –ª—É—á—à–µ–≥–æ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è
        button.style.cssText += `
          flex-shrink: 0 !important;
          margin-right: 0 !important;
        `;
        
        // –í—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∫–Ω–æ–ø–∫—É –ø–æ—Å–ª–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π
        parentContainer.insertBefore(newButton, button.nextSibling);
        const buttonText = '–°–º–æ—Ç—Ä–µ—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ';
        console.log(`üéâ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ "${buttonText}" –≤ –æ–¥–Ω—É –ª–∏–Ω–∏—é`);
        
        // –û—Ç–º–µ—á–∞–µ–º, —á—Ç–æ –∫–Ω–æ–ø–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –∏ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–∏—Å–∫
        extensionState.buttonsAdded = true;
        clearSearchInterval();
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–Ω–æ–ø–∫–∏:', error);
    }
  });
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –ø–æ–∏—Å–∫–∞
const clearSearchInterval = () => {
  if (extensionState.searchInterval) {
    clearInterval(extensionState.searchInterval);
    extensionState.searchInterval = null;
    console.log('üõë –ü–æ–∏—Å–∫ –∫–Ω–æ–ø–æ–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
  }
  
  if (extensionState.observer) {
    extensionState.observer.disconnect();
    extensionState.observer = null;
    console.log('üõë Observer –æ—Ç–∫–ª—é—á–µ–Ω');
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±—Ä–æ—Å–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ URL
const resetExtensionState = () => {
  console.log('üîÑ –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è');
  extensionState.buttonsAdded = false;
  extensionState.searchAttempts = 0;
  clearSearchInterval();
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞–±–ª—é–¥–µ–Ω–∏—è –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ DOM (–±–æ–ª–µ–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è)
const observeDOM = () => {
  // –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π observer –µ—Å–ª–∏ –µ—Å—Ç—å
  if (extensionState.observer) {
    extensionState.observer.disconnect();
  }

  extensionState.observer = new MutationObserver((mutations) => {
    // –ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∏ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã, –Ω–µ —Ä–µ–∞–≥–∏—Ä—É–µ–º –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    if (extensionState.buttonsAdded) {
      return;
    }

    let shouldAddButton = false;
    
    mutations.forEach((mutation) => {
      if (mutation.type === 'childList' && mutation.addedNodes.length > 0) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã –∑–Ω–∞—á–∏–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã (–Ω–µ –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —É–∑–ª—ã)
        const hasSignificantNodes = Array.from(mutation.addedNodes).some(node => 
          node.nodeType === Node.ELEMENT_NODE && 
          (node.tagName === 'BUTTON' || node.tagName === 'A' || node.querySelector('button, a'))
        );
        
        if (hasSignificantNodes) {
          shouldAddButton = true;
        }
      }
    });
    
    if (shouldAddButton) {
      // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞
      setTimeout(addFreeButtons, 500);
    }
  });
  
  extensionState.observer.observe(document.body, {
    childList: true,
    subtree: true
  });
  
  return extensionState.observer;
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞–±–ª—é–¥–µ–Ω–∏—è –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ URL
const observeUrlChange = () => {
  let currentUrl = window.location.href;
  
  // –ù–∞–±–ª—é–¥–∞–µ–º –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –≤ –∏—Å—Ç–æ—Ä–∏–∏ –±—Ä–∞—É–∑–µ—Ä–∞
  const originalPushState = history.pushState;
  const originalReplaceState = history.replaceState;
  
  history.pushState = function(...args) {
    originalPushState.apply(history, args);
    checkUrlChange();
  };
  
  history.replaceState = function(...args) {
    originalReplaceState.apply(history, args);
    checkUrlChange();
  };
  
  window.addEventListener('popstate', checkUrlChange);
  
  function checkUrlChange() {
    if (window.location.href !== currentUrl) {
      console.log(`üåê URL –∏–∑–º–µ–Ω–∏–ª—Å—è: ${currentUrl} -> ${window.location.href}`);
      currentUrl = window.location.href;
      resetExtensionState();
      
      // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–∏—Å–∫ –∫–Ω–æ–ø–æ–∫ –Ω–∞ –Ω–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
      setTimeout(() => {
        if (isMovieOrSeriesPage()) {
          startButtonSearch();
        }
      }, 1000);
    }
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–æ–∏—Å–∫–∞ –∫–Ω–æ–ø–æ–∫ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏
const startButtonSearch = () => {
  console.log('üîç –ó–∞–ø—É—Å–∫ –ø–æ–∏—Å–∫–∞ –∫–Ω–æ–ø–æ–∫...');
  
  // –ü–µ—Ä–≤–∞—è –ø–æ–ø—ã—Ç–∫–∞ —Å—Ä–∞–∑—É
  setTimeout(addFreeButtons, 500);
  
  // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ø–æ–ø—ã—Ç–æ–∫
  extensionState.searchInterval = setInterval(() => {
    if (extensionState.buttonsAdded || extensionState.searchAttempts >= extensionState.maxSearchAttempts) {
      clearSearchInterval();
      return;
    }
    addFreeButtons();
  }, 2000); // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –¥–æ 2 —Å–µ–∫—É–Ω–¥
  
  // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ DOM
  observeDOM();
  
  // –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ–∏—Å–∫–∞ —á–µ—Ä–µ–∑ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è (20 —Å–µ–∫—É–Ω–¥)
  setTimeout(() => {
    if (!extensionState.buttonsAdded) {
      console.log('‚è∞ –í—Ä–µ–º—è –ø–æ–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–ª–æ, –æ—Å—Ç–∞–Ω–æ–≤–∫–∞');
      clearSearchInterval();
    }
  }, 20000);
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
const init = () => {
  console.log('üé¨ Kinopoisk Free Watch Extension: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...');
  console.log('üåê –¢–µ–∫—É—â–∏–π URL:', window.location.href);
  console.log('üìÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ñ–∏–ª—å–º–∞/—Å–µ—Ä–∏–∞–ª–∞:', isMovieOrSeriesPage());
  
  // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π URL
  observeUrlChange();
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–∏—Å–∫ –∫–Ω–æ–ø–æ–∫, –µ—Å–ª–∏ –Ω–∞—Ö–æ–¥–∏–º—Å—è –Ω–∞ –Ω—É–∂–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
  if (isMovieOrSeriesPage()) {
    startButtonSearch();
  }
};

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
if (document.readyState === 'loading') {
  document.addEventListener('DOMContentLoaded', init);
} else {
  init();
} 